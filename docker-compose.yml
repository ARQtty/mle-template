version: '3.1'
services:
  vault:
    image: vault:latest
    ports:
      - "8200:8200"
    volumes:
      - ./vault:/vault/
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=vault/vault.json

  db:
    image: postgres:14.5
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - docker.env

  init_db:
    depends_on:
      - db
      - vault
    build: .
    command: bash -c "python3 src/00-dataset_to_db.py"
    image: 54367888/mle-template:latest
    volumes:
      - ./vault:/app/vault/
    env_file:
      - docker.env
    links:
      - "db:database"
      - "vault:vault"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    depends_on:
      - init_db

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGER: kafka=ERROR
    links:
      - "zookeeper:zookeeper"


  fit_predict:
    depends_on:
      - kafka
    build: .
    command: bash -c "python3 src/bikes_regression.py"
    image: 54367888/mle-template:latest
    volumes:
      - ./vault:/app/vault/
    env_file:
      - docker.env
    links:
      - "db:database"
      - "vault:vault"
      - "kafka:kafka"
      - "zookeeper:zookeeper"

  tests:
    build: .
    command: bash -c "python3 -m pytest tests/test_model_quality.py"
